[{"name":"abstract fun <T : Logics> create(type: Class<T>): T","description":"sp.kx.logics.LogicsFactory.create","location":"-logics/sp.kx.logics/-logics-factory/create.html","searchKeys":["create","abstract fun <T : Logics> create(type: Class<T>): T","sp.kx.logics.LogicsFactory.create"]},{"name":"class LogicsProvider(factory: LogicsFactory = SimpleLogicsFactory)","description":"sp.kx.logics.LogicsProvider","location":"-logics/sp.kx.logics/-logics-provider/index.html","searchKeys":["LogicsProvider","class LogicsProvider(factory: LogicsFactory = SimpleLogicsFactory)","sp.kx.logics.LogicsProvider"]},{"name":"constructor()","description":"sp.kx.logics.Logics.Logics","location":"-logics/sp.kx.logics/-logics/-logics.html","searchKeys":["Logics","constructor()","sp.kx.logics.Logics.Logics"]},{"name":"constructor(coroutineContext: CoroutineContext)","description":"sp.kx.logics.Logics.Logics","location":"-logics/sp.kx.logics/-logics/-logics.html","searchKeys":["Logics","constructor(coroutineContext: CoroutineContext)","sp.kx.logics.Logics.Logics"]},{"name":"constructor(coroutineContext: CoroutineContext, tags: Map<String, Closeable>)","description":"sp.kx.logics.Logics.Logics","location":"-logics/sp.kx.logics/-logics/-logics.html","searchKeys":["Logics","constructor(coroutineContext: CoroutineContext, tags: Map<String, Closeable>)","sp.kx.logics.Logics.Logics"]},{"name":"constructor(factory: LogicsFactory = SimpleLogicsFactory)","description":"sp.kx.logics.LogicsProvider.LogicsProvider","location":"-logics/sp.kx.logics/-logics-provider/-logics-provider.html","searchKeys":["LogicsProvider","constructor(factory: LogicsFactory = SimpleLogicsFactory)","sp.kx.logics.LogicsProvider.LogicsProvider"]},{"name":"constructor(tags: Map<String, Closeable>)","description":"sp.kx.logics.Logics.Logics","location":"-logics/sp.kx.logics/-logics/-logics.html","searchKeys":["Logics","constructor(tags: Map<String, Closeable>)","sp.kx.logics.Logics.Logics"]},{"name":"fun <T : Logics> contains(label: String, type: Class<T>): Boolean","description":"sp.kx.logics.LogicsProvider.contains","location":"-logics/sp.kx.logics/-logics-provider/contains.html","searchKeys":["contains","fun <T : Logics> contains(label: String, type: Class<T>): Boolean","sp.kx.logics.LogicsProvider.contains"]},{"name":"fun <T : Logics> get(label: String, type: Class<T>): T","description":"sp.kx.logics.LogicsProvider.get","location":"-logics/sp.kx.logics/-logics-provider/get.html","searchKeys":["get","fun <T : Logics> get(label: String, type: Class<T>): T","sp.kx.logics.LogicsProvider.get"]},{"name":"fun <T : Logics> remove(label: String, type: Class<T>)","description":"sp.kx.logics.LogicsProvider.remove","location":"-logics/sp.kx.logics/-logics-provider/remove.html","searchKeys":["remove","fun <T : Logics> remove(label: String, type: Class<T>)","sp.kx.logics.LogicsProvider.remove"]},{"name":"inline fun <T : Logics> LogicsProvider.contains(label: String): Boolean","description":"sp.kx.logics.contains","location":"-logics/sp.kx.logics/contains.html","searchKeys":["contains","inline fun <T : Logics> LogicsProvider.contains(label: String): Boolean","sp.kx.logics.contains"]},{"name":"inline fun <T : Logics> LogicsProvider.get(label: String): T","description":"sp.kx.logics.get","location":"-logics/sp.kx.logics/get.html","searchKeys":["get","inline fun <T : Logics> LogicsProvider.get(label: String): T","sp.kx.logics.get"]},{"name":"inline fun <T : Logics> LogicsProvider.remove(label: String)","description":"sp.kx.logics.remove","location":"-logics/sp.kx.logics/remove.html","searchKeys":["remove","inline fun <T : Logics> LogicsProvider.remove(label: String)","sp.kx.logics.remove"]},{"name":"interface LogicsFactory","description":"sp.kx.logics.LogicsFactory","location":"-logics/sp.kx.logics/-logics-factory/index.html","searchKeys":["LogicsFactory","interface LogicsFactory","sp.kx.logics.LogicsFactory"]},{"name":"object SimpleLogicsFactory : LogicsFactory","description":"sp.kx.logics.SimpleLogicsFactory","location":"-logics/sp.kx.logics/-simple-logics-factory/index.html","searchKeys":["SimpleLogicsFactory","object SimpleLogicsFactory : LogicsFactory","sp.kx.logics.SimpleLogicsFactory"]},{"name":"open class Logics","description":"sp.kx.logics.Logics","location":"-logics/sp.kx.logics/-logics/index.html","searchKeys":["Logics","open class Logics","sp.kx.logics.Logics"]},{"name":"open override fun <T : Logics> create(type: Class<T>): T","description":"sp.kx.logics.SimpleLogicsFactory.create","location":"-logics/sp.kx.logics/-simple-logics-factory/create.html","searchKeys":["create","open override fun <T : Logics> create(type: Class<T>): T","sp.kx.logics.SimpleLogicsFactory.create"]}]
